# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

$SCRIPT = <<-SCRIPT
echo I am provisioning...

mkdir -p /datadrive

yum update -y && yum install -y epel-release && yum update -y
yum install -y tree less nmap-ncat.x86_64 socat.x86_64 htop.x86_64 \
platform-python-pip.noarch python36.x86_64 python3-six.noarch

grep '192.168.80.80 ipaserver.ipa.bmxinit.ga' /etc/hosts \
  || cat <<EOF_ETC_HOSTS | sudo tee -a /etc/hosts

# add addresses to /etc/hosts
192.168.80.80 ipaserver.ipa.bmxinit.ga ipaserver
192.168.80.81 ipareplica1.ipa.bmxinit.ga ipareplica1
192.168.80.85 ipaclient1.ipa.bmxinit.ga ipaclient1
192.168.80.86 ipaclient2.ipa.bmxinit.ga ipaclient2
192.168.80.87 keycloak.devops.bmxinit.ga keycloak
EOF_ETC_HOSTS

date > /etc/vagrant_provisioned_at

SCRIPT

# Use artefacts/config/multi-nodes.yml for basic VM configuration.
require 'yaml'
dir = File.dirname(File.expand_path(__FILE__))
config_nodes = "#{dir}/artefacts/config/multi-nodes.yml"

if !File.exist?("#{config_nodes}")
  raise 'Configuration file is missing! Please make sure that the configuration exists and try again.'
end
vconfig = YAML::load_file("#{config_nodes}")

BRIDGE_NET = vconfig['vagrant_ip']
DOMAIN = vconfig['vagrant_domain_name']
RAM = vconfig['vagrant_memory']
CPU = vconfig['vagrant_cpu']
servers=[
    {
        :name => "ipaserver",
        :hostname => "ipaserver" + "." + "#{DOMAIN}",
        :ip => "#{BRIDGE_NET}" + "80",
        :ram => "#{RAM}",
        :cpu => "#{CPU}"
    },
    {
        :name => "ipareplica1",
        :hostname => "ipareplica1" + "." + "#{DOMAIN}",
        :ip => "#{BRIDGE_NET}" + "81",
        :ram => "#{RAM}",
        :cpu => "#{CPU}"
    },
    {
        :name => "ipaclient1",
        :hostname => "ipaclient1" + "." + "#{DOMAIN}",
        :ip => "#{BRIDGE_NET}" + "85",
        :ram => "#{RAM}",
        :cpu => "#{CPU}"
    },
    {
        :name => "ipaclient2",
        :hostname => "ipaclient2" + "." + "#{DOMAIN}",
        :ip => "#{BRIDGE_NET}" + "86",
        :ram => "#{RAM}",
        :cpu => "#{CPU}"
    },
    {
        :name => "keycloak",
        :hostname => "keycloak" + "." + "devops.bmxinit.ga",
        :ip => "#{BRIDGE_NET}" + "87",
        :ram => "#{RAM}",
        :cpu => "#{CPU}"
    }
]

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.synced_folder ".", vconfig['vagrant_directory'], :mount_options => ["dmode=777", "fmode=666"]
  servers.each_with_index do |machine, index|
    config.vm.define machine[:name] do |node|
      node.vm.box = vconfig['vagrant_box']
      node.vm.box_version = vconfig['vagrant_box_version']
      node.vm.hostname = machine[:hostname]
      node.vm.network :private_network, ip: machine[:ip]
      node.ssh.insert_key = false

      node.vm.provider :virtualbox do |vb|
        # vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        vb.cpus = machine[:cpu]
        vb.memory = machine[:ram]
        vb.name = machine[:name]
      end

      node.vm.provision :shell, inline: $SCRIPT
      #node.vm.provision :shell, inline: "sed -i.bak 's/^\\(127.0.0.1.*\\t\\)#{node.vm.hostname}\\t\\(#{machine[:name]}\\)$/\\1\\2/' /etc/hosts"
      node.vm.provision :shell, inline: "sed -i.bak '/^\\(127.0.0.1.*\\t\\)#{node.vm.hostname}\\t\\(#{machine[:name]}\\)$/d' /etc/hosts"
      if index+1 == servers.length
        node.vm.provision :shell, inline: <<-SHELL
          echo 'I am provisioning the last VM with some specifics (like inventories to know about all the previous) ...'
        SHELL
      end
    end
  end
end
